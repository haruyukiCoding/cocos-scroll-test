{"version":3,"sources":["file:///C:/D-Disk/cocos%20project/ScrollTest/assets/scripts/ScrollViewRendererCtrl.ts"],"names":["_decorator","Component","ScrollView","Vec3","Rect","UITransform","UIOpacity","ccclass","property","ScrollViewRendererCtrl","start","update","deltaTime","calculate","uiTransform","scrollView","node","getComponent","parentTransform","parent","scrollViewPosition","position","svLeftBottomPoint","convertToWorldSpaceAR","x","anchorX","width","y","anchorY","height","z","svBBoxRect","console","log","content","children","forEach","childNode","childTransform","childBoundingBox","getBoundingBoxToWorld","childOpacity","addComponent","intersects","opacity"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,U,OAAAA,U;AAAgBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;;;;;;;;;OACzE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;wCAGjBS,sB,WADZF,OAAO,CAAC,wBAAD,C,UAUHC,QAAQ,CAACN,UAAD,C,2BAVb,MACaO,sBADb,SAC4CR,SAD5C,CACsD;AAAA;AAAA;;AAAA;AAAA;;AAClDS,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAKMC,QAAAA,SAAS,GAAE;AACd;AACR,cAAIC,WAAW,GAAG,KAAKC,UAAL,CAAgBC,IAAhB,CAAqBC,YAArB,CAAkCZ,WAAlC,CAAlB;;AAEA,cAAIS,WAAJ,EAAiB;AACf;AACA,gBAAII,eAAe,GAAG,KAAKH,UAAL,CAAgBC,IAAhB,CAAqBG,MAArB,CAA6BF,YAA7B,CAA0CZ,WAA1C,CAAtB;;AAEA,gBAAIa,eAAJ,EAAqB;AACnB;AACA,kBAAIE,kBAAkB,GAAG,KAAKL,UAAL,CAAgBC,IAAhB,CAAqBK,QAA9C;AACA,kBAAIC,iBAAiB,GAAGJ,eAAe,CAACK,qBAAhB,CACtB,IAAIpB,IAAJ,CACEiB,kBAAkB,CAACI,CAAnB,GAAuBV,WAAW,CAACW,OAAZ,GAAsBX,WAAW,CAACY,KAD3D,EAEEN,kBAAkB,CAACO,CAAnB,GAAuBb,WAAW,CAACc,OAAZ,GAAsBd,WAAW,CAACe,MAF3D,EAGET,kBAAkB,CAACU,CAHrB,CADsB,CAAxB,CAHmB,CAWlB;;AACA,kBAAIC,UAAgB,GAAG,IAAI3B,IAAJ,CACpBkB,iBAAiB,CAACE,CADE,EAEpBF,iBAAiB,CAACK,CAFE,EAGpBb,WAAW,CAACY,KAHQ,EAIpBZ,WAAW,CAACe,MAJQ,CAAvB;AAOCG,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,UAAxC,EAnBiB,CAqBjB;;AACA,mBAAKhB,UAAL,CAAgBmB,OAAhB,CAAyBC,QAAzB,CAAkCC,OAAlC,CAA2CC,SAAD,IAAqB;AAC7D;AACA,oBAAIC,cAAc,GAAGD,SAAS,CAACpB,YAAV,CAAuBZ,WAAvB,CAArB;;AAEA,oBAAIiC,cAAJ,EAAoB;AAClB;AACA,sBAAIC,gBAAgB,GAAGD,cAAc,CAACE,qBAAf,EAAvB,CAFkB,CAGlB;;AACA,sBAAIC,YAAY,GAAGJ,SAAS,CAACpB,YAAV,CAAuBX,SAAvB,CAAnB;;AAEA,sBAAI,CAACmC,YAAL,EAAmB;AACjB;AACAA,oBAAAA,YAAY,GAAGJ,SAAS,CAACK,YAAV,CAAuBpC,SAAvB,CAAf;AACD,mBATiB,CAWlB;AACA;;;AACA,sBAAIiC,gBAAgB,CAACI,UAAjB,CAA4BZ,UAA5B,CAAJ,EAA6C;AAC3C,wBAAIU,YAAY,CAACG,OAAb,KAAyB,GAA7B,EAAkC;AAChCH,sBAAAA,YAAY,CAACG,OAAb,GAAuB,GAAvB,CADgC,CAEhC;AACD;AACF,mBALD,MAKO;AACL,wBAAIH,YAAY,CAACG,OAAb,KAAyB,CAA7B,EAAgC;AAC9BH,sBAAAA,YAAY,CAACG,OAAb,GAAuB,CAAvB,CAD8B,CAE9B;AACD;AACF;AACF;AACF,eA7BD;AA8BD;AAGF;AACF;;AA5EqD,O","sourcesContent":["import { _decorator, Component, Node, ScrollView,Vec2,Vec3, Rect, UITransform, UIOpacity } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ScrollViewRendererCtrl')\nexport class ScrollViewRendererCtrl extends Component {\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    @property(ScrollView)\n    scrollView:ScrollView;\n\n    public calculate(){\n        // 获取 ScrollView Node 的 UITransform 组件\nlet uiTransform = this.scrollView.node.getComponent(UITransform);\n\nif (uiTransform) {\n  // 获取 ScrollView Node 的父节点的 UITransform 组件\n  let parentTransform = this.scrollView.node.parent!.getComponent(UITransform);\n  \n  if (parentTransform) {\n    // 将 Vec3 的位置转换为 Vec2\n    let scrollViewPosition = this.scrollView.node.position;\n    let svLeftBottomPoint = parentTransform.convertToWorldSpaceAR(\n      new Vec3(\n        scrollViewPosition.x - uiTransform.anchorX * uiTransform.width,\n        scrollViewPosition.y - uiTransform.anchorY * uiTransform.height,\n        scrollViewPosition.z\n      )\n    );\n\n     // 求出 ScrollView 可视区域在世界坐标系中的矩形（碰撞盒）\n     let svBBoxRect: Rect = new Rect(\n        svLeftBottomPoint.x,\n        svLeftBottomPoint.y,\n        uiTransform.width,\n        uiTransform.height\n      );\n  \n      console.log('ScrollView Bounding Box:', svBBoxRect);\n  \n      // 遍历 ScrollView Content 内容节点的子节点\n      this.scrollView.content!.children.forEach((childNode: Node) => {\n        // 获取子节点的 UITransform 组件\n        let childTransform = childNode.getComponent(UITransform);\n  \n        if (childTransform) {\n          // 获取子节点的包围盒\n          let childBoundingBox = childTransform.getBoundingBoxToWorld();\n          // 获取子节点的 UIOpacity 组件\n          let childOpacity = childNode.getComponent(UIOpacity);\n  \n          if (!childOpacity) {\n            // 如果子节点没有 UIOpacity 组件，则添加一个\n            childOpacity = childNode.addComponent(UIOpacity);\n          }\n  \n          // 对每个子节点的包围盒做和 ScrollView 可视区域包围盒做碰撞判断\n          // 如果相交了，那么就显示，否则就隐藏\n          if (childBoundingBox.intersects(svBBoxRect)) {\n            if (childOpacity.opacity !== 255) {\n              childOpacity.opacity = 255;\n              // childNode.emit(\"on_enter_scroll_view\");\n            }\n          } else {\n            if (childOpacity.opacity !== 0) {\n              childOpacity.opacity = 0;\n              // childNode.emit(\"on_exit_scroll_view\");\n            }\n          }\n        }\n      });\n    }\n\n    \n  }\n}}"]}