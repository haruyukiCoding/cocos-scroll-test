{"version":3,"sources":["file:///C:/D-Disk/cocos%20project/ScrollTest/assets/scripts/ScrollViewPlus.ts"],"names":["_decorator","ScrollView","Vec3","Rect","UITransform","ScrollViewPlusItem","ccclass","property","ScrollViewPlus","tooltip","onEnable","node","on","_onScrollingDrawCallOpt","onDisable","off","content","children","length","optDc","caculatePosition","scrollView","uiTransform","getComponent","parentTransform","parent","scrollViewPosition","position","svLeftBottomPoint","convertToWorldSpaceAR","x","anchorX","width","y","anchorY","height","z","svBBoxRect","forEach","childNode","childTransform","itemComponent","getBoundingBoxToWorld","intersects","isShowing","publishOnEnterScrollView","publishOnExitScrollView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,U,OAAAA,U;AAAgBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;;AACzDC,MAAAA,kB,iBAAAA,kB;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;yBAEqBQ,c,WADpBF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE;AADH,OAAD,C,2BAFb,MACqBD,cADrB,SAC4CP,UAD5C,CACuD;AAAA;AAAA;;AAAA;AAAA;;AAMnDS,QAAAA,QAAQ,GAAG;AACP,gBAAMA,QAAN;AACA,eAAKC,IAAL,CAAUC,EAAV,CAAa,WAAb,EAA0B,KAAKC,uBAA/B,EAAwD,IAAxD;AACH;;AAEDC,QAAAA,SAAS,GAAG;AACR,gBAAMA,SAAN;AACA,eAAKH,IAAL,CAAUI,GAAV,CAAc,WAAd,EAA2B,KAAKF,uBAAhC,EAAyD,IAAzD;AACH;;AAEOA,QAAAA,uBAAuB,GAAG;AAC9B,cAAI,KAAKG,OAAL,CAAcC,QAAd,CAAuBC,MAAvB,IAAiC,CAArC,EAAwC;AACpC;AACH;;AACD,eAAKC,KAAL;AACH;;AAEMA,QAAAA,KAAK,GAAG;AACXX,UAAAA,cAAc,CAACW,KAAf,CAAqB,IAArB,EAA2B,KAAKC,gBAAhC;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACuB,eAALD,KAAK,CAACE,UAAD,EAAyBD,gBAAzB,EAAoD;AAEnE;AACA,cAAIE,WAAW,GAAGD,UAAU,CAACV,IAAX,CAAgBY,YAAhB,CAA6BnB,WAA7B,CAAlB;;AAGA,cAAIkB,WAAJ,EAAiB;AACb;AACA,gBAAIE,eAAe,GAAGH,UAAU,CAACV,IAAX,CAAgBc,MAAhB,CAAwBF,YAAxB,CAAqCnB,WAArC,CAAtB;;AAEA,gBAAIoB,eAAJ,EAAqB;AAEzB;AACJ,kBAAIE,kBAAkB,GAAGL,UAAU,CAACV,IAAX,CAAgBgB,QAAzC;AACA,kBAAIC,iBAAiB,GAAGJ,eAAe,CAACK,qBAAhB,CACtB,IAAI3B,IAAJ,CACEwB,kBAAkB,CAACI,CAAnB,GAAuBR,WAAW,CAACS,OAAZ,GAAsBT,WAAW,CAACU,KAD3D,EAEEN,kBAAkB,CAACO,CAAnB,GAAuBX,WAAW,CAACY,OAAZ,GAAsBZ,WAAW,CAACa,MAF3D,EAGET,kBAAkB,CAACU,CAHrB,CADsB,CAAxB,CAJ6B,CAWzB;;AACA,kBAAIC,UAAgB,GAAG,IAAIlC,IAAJ,CACnByB,iBAAiB,CAACE,CADC,EAEnBF,iBAAiB,CAACK,CAFC,EAGnBX,WAAW,CAACU,KAHO,EAInBV,WAAW,CAACa,MAJO,CAAvB,CAZyB,CAmBzB;;AACFd,cAAAA,UAAU,CAACL,OAAX,CAAoBC,QAApB,CAA6BqB,OAA7B,CAAsCC,SAAD,IAAqB;AACxD;AACA,oBAAIC,cAAc,GAAGD,SAAS,CAAChB,YAAV,CAAuBnB,WAAvB,CAArB,CAFwD,CAIxD;;AACJ,oBAAIqC,aAAa,GAAGF,SAAS,CAAChB,YAAV;AAAA;AAAA,6DAApB;;AACA,oBAAIkB,aAAa,IAAI,IAArB,EAA2B;AACvB;AACH,iBAR2D,CAU5D;;;AACA,oBAAID,cAAc,CAACE,qBAAf,GAAuCC,UAAvC,CAAkDN,UAAlD,CAAJ,EAAmE;AAC/D,sBAAI,CAACI,aAAa,CAACG,SAAnB,EAA8B;AAC1BH,oBAAAA,aAAa,CAACG,SAAd,GAA0B,IAA1B;AACAH,oBAAAA,aAAa,CAACI,wBAAd;AACH;AACJ,iBALD,MAKO;AACH,sBAAIJ,aAAa,CAACG,SAAlB,EAA6B;AACzBH,oBAAAA,aAAa,CAACG,SAAd,GAA0B,KAA1B;AACAH,oBAAAA,aAAa,CAACK,uBAAd;AACH;AACJ;AACE,eAtBD;AAyBD;AACJ;AACA;;AA5FsD,O;;;;;iBAIvB,K","sourcesContent":["import { _decorator, Component, Node, ScrollView,Vec2,Vec3, Rect, UITransform, UIOpacity } from 'cc';\nimport { ScrollViewPlusItem } from './ScrollViewPlusItem';\n\nconst { ccclass, property } = _decorator;\n\n/**\n * 用法：\n *\n *      1. 将本组件挂载在节点上即可，和正常ScrollView使用一致\n *\n * 原理：\n *\n *      1. 滚动时，判断子节点是否进入了/离开了可视区域\n *      2. 根据结果回调对应事件，在可以实现类似以下功能：\n *          * 控制可视区域Item显示（透明度改为 255 ），非可视区域Item隐藏（透明度改为 0 ）\n */\n@ccclass('ScrollViewPlus')\nexport default class ScrollViewPlus extends ScrollView {\n    @property({\n        tooltip: \"是否计算在可视区域中Item的相对位置（可能会相对耗性能）\"\n    })\n    caculatePosition: boolean = false;\n\n    onEnable() {\n        super.onEnable();\n        this.node.on(\"scrolling\", this._onScrollingDrawCallOpt, this);\n    }\n\n    onDisable() {\n        super.onDisable();\n        this.node.off(\"scrolling\", this._onScrollingDrawCallOpt, this);\n    }\n\n    private _onScrollingDrawCallOpt() {\n        if (this.content!.children.length == 0) {\n            return;\n        }\n        this.optDc();\n    }\n\n    public optDc() {\n        ScrollViewPlus.optDc(this, this.caculatePosition);\n    }\n\n    /**\n     * 优化 ScrollView Content 节点 DC，可以手动调用\n     *\n     * 具体为\n     *\n     * 1. 进入ScrollView可视区域是，回调对应 Content 子节点上挂载的 ScollViewPlusItem 组件的 onEnterScorllViewEvents 数组事件\n     * 2. 退出ScrollView可视区域是，回调对应 Content 子节点上挂载的 ScollViewPlusItem 组件的 onExitScorllViewEvents 数组事件\n     */\n    public static optDc(scrollView: ScrollView, caculatePosition: boolean) {\n\n        // 获取 ScrollView Node 的 UITransform 组件\n        let uiTransform = scrollView.node.getComponent(UITransform);\n\n\n        if (uiTransform) {\n            // 获取 ScrollView Node 的父节点的 UITransform 组件\n            let parentTransform = scrollView.node.parent!.getComponent(UITransform);\n\n            if (parentTransform) {\n\n        // 将 Vec3 的位置转换为 Vec2\n    let scrollViewPosition = scrollView.node.position;\n    let svLeftBottomPoint = parentTransform.convertToWorldSpaceAR(\n      new Vec3(\n        scrollViewPosition.x - uiTransform.anchorX * uiTransform.width,\n        scrollViewPosition.y - uiTransform.anchorY * uiTransform.height,\n        scrollViewPosition.z\n      )\n    );\n        // 求出 ScrollView 可视区域在世界坐标系中的矩形（碰撞盒）\n        let svBBoxRect: Rect = new Rect(\n            svLeftBottomPoint.x,\n            svLeftBottomPoint.y,\n            uiTransform.width,\n            uiTransform.height\n          );\n\n        // 遍历 ScrollView Content 内容节点的子节点\n      scrollView.content!.children.forEach((childNode: Node) => {\n        // 获取子节点的 UITransform 组件\n        let childTransform = childNode.getComponent(UITransform);\n  \n        // 没有绑定指定组件的子节点不处理\n    let itemComponent = childNode.getComponent(ScrollViewPlusItem);\n    if (itemComponent == null) {\n        return;\n    }\n\n    // 如果相交了，那么就显示，否则就隐藏\n    if (childTransform.getBoundingBoxToWorld().intersects(svBBoxRect)) {\n        if (!itemComponent.isShowing) {\n            itemComponent.isShowing = true;\n            itemComponent.publishOnEnterScrollView();\n        }\n    } else {\n        if (itemComponent.isShowing) {\n            itemComponent.isShowing = false;\n            itemComponent.publishOnExitScrollView();\n        }\n    }\n      });\n\n\n    }\n}\n}\n}\n"]}