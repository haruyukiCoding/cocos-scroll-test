{"version":3,"sources":["file:///C:/D-Disk/cocos%20project/ScrollTest/assets/scripts/main.ts"],"names":["_decorator","Component","Node","ScrollView","v2","Size","resources","SpriteFrame","Prefab","instantiate","v3","Sprite","Label","ccclass","property","main","itemPrefab","startPos","cachePool","dataList","maxNum","itemHeight","initY","maxY","minY","needSize","visibleHeight","curOffset","miniIdx","showItemList","headList","onLoad","viewContent","position","x","y","maskNode","getContentSize","height","scroll","node","on","onScrolling","bind","Promise","resolve","reject","loadDir","err","asset","load","i","push","loadList","onEnable","start","destroyAllChildren","InitObjs","length","setContentSize","width","curX","curY","obj","parent","active","onRefresh","countBorder","offest","refresh","idx","lastMinIdx","Math","floor","curEndY","deleteNodeUuIdList","remainList","forEach","item","index","uuid","len","indexOf","splice","refreshItem","objIdx","pop","console","error","sort","a","b","head","getChildByName","getComponent","num","spriteFrame","string","scrollOffset","getScrollOffset","update","dt"],"mappings":"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","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { _decorator,Component,Node,ScrollView,v2,Size,resources,SpriteFrame,Prefab, instantiate, v3, Sprite, Label, Vec2 } from \"cc\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('main')\nexport default class main extends Component {\n\n    @property(Node)\n    viewContent: Node = null; // 列表挂点\n\n    @property(Node)\n    maskNode: Node = null; // 遮罩\n\n    @property(ScrollView)\n    scroll: ScrollView = null; // \n\n    itemPrefab = null; // 预制体\n    private startPos = null;// 滑动视图的起始位置\n    private cachePool = [];// 移除的等待使用的item池\n    private dataList = [];// 数据列表\n    private maxNum = 8;// 必须小于服务器返回的每页最大个数，这里每页是20个\n    private itemHeight = 105; // 高度+间隙\n    private initY = 0;\n    private maxY = 0;\n    private minY = 0;\n    private needSize = 0;//需求要求的高度/宽度\n    private visibleHeight = 0;//显示范围高度\n    private curOffset = 0;// 滑动偏移 距离左上角\n    private miniIdx = 0;// 开始的数据列表index\n    private showItemList = [];// 显示的item列表\n\n    private headList = [];// 头像图列表\n    async onLoad() {\n        this.startPos = v2(this.viewContent.position.x, this.viewContent.position.y);\n\n        this.visibleHeight = this.maskNode.getContentSize().height;\n        this.scroll.node.on(\"scrolling\", this.onScrolling.bind(this), this);\n        // 加载预制体和图片\n        await new Promise((resolve, reject) => {\n            resources.loadDir(\"imgge\", SpriteFrame, (err, asset) => {\n                if (!err) this.headList = asset;\n                resolve(asset);\n            })\n        })\n        await new Promise((resolve, reject) => {\n            resources.load(\"prefab/item\", Prefab, (err, asset) => {\n                if (!err) this.itemPrefab = asset;\n                resolve(asset);\n            })\n        })\n        // 可以请求服务器得到\n        // 总共40个数据\n        for (let i = 0; i < 40; i++) {\n            this.dataList.push(i + 1);\n        }\n        this.loadList();\n    }\n    // 每次显示 都初始化一下，用于重新加载数据,滑动重置\n    onEnable() {\n        this.cachePool = [];\n        this.dataList = [];\n        this.viewContent.height = 0;\n        this.initY = -this.itemHeight / 2;\n        this.curOffset = 0;\n        this.miniIdx = 0;\n        this.showItemList = []\n\n        if (this.startPos) this.viewContent.position = this.startPos; // 重置初始位置\n    }\n    start() {\n    }\n\n    // 加载列表\n    loadList() {\n        this.viewContent.destroyAllChildren();// 只要是第一页就重新加载；\n        this.InitObjs();\n        // 设置内容高度\n        this.needSize = this.dataList.length * this.itemHeight;\n        this.viewContent.setContentSize(new Size(this.viewContent.getContentSize().width, this.needSize));\n    }\n    // 初始化几个\n    InitObjs() {\n        let curX = 0;\n        let curY = 0;\n        for (let i = 0; i < this.maxNum; i++) {\n            if (!this.dataList[i]) break;\n            let obj = instantiate(this.itemPrefab);\n            obj.parent = this.viewContent;\n            obj.active = true;\n            curY = this.initY - this.itemHeight * i;\n            obj.position = v3(curX,curY);\n            this.onRefresh(obj,i+\"\", i);\n            this.showItemList.push(obj);\n        }\n    }\n    //计算边界，超过边界则刷新列表\n    //offest是左上角原点滑动的偏移量\n    private countBorder(offest) {\n        let height = this.visibleHeight;//可见高度\n        this.minY = offest;//获得相对于左上角原点的最小y值\n        this.maxY = offest + height;//获得相对于左上角原点的最大y值\n    }\n    //强行刷新\n    public refresh() {\n        let offest = this.curOffset;\n\n        //最大高度，超过该高度，不刷新\n        let maxY = this.needSize;\n        if (offest < 0 || offest + this.visibleHeight >= maxY)\n            return;\n\n        let idx: number = 0;//从0开始\n        this.countBorder(offest);\n        let lastMinIdx = this.miniIdx;\n        let miniIdx = Math.floor(offest / this.itemHeight);\n        // 当每次更新miniIdx 不同的时候，就是移除和新建的时候\n        if (this.miniIdx != miniIdx) {\n            let curY = this.initY - this.itemHeight * miniIdx;// 当前要开始的y,大于y的删除\n            let curEndY = this.initY - this.itemHeight * (miniIdx + this.maxNum);// 当前要结束的y,小于y的删除\n            let deleteNodeUuIdList = [];// 需要移除的uuid \n            let remainList = [];// 剩余的data index\n            this.showItemList.forEach((item, index) => {\n                if (item.position.y > curY || item.position.y <= curEndY) {// 大于当前展示的坐标或者小于当前展示的最小坐标，就可以移除\n                    deleteNodeUuIdList.push(item.uuid);\n                }\n                else {\n                    remainList.push(lastMinIdx + index); // 这里的顺序 iten列表对应上次实例化的data的index\n                }\n            })\n            let len = this.showItemList.length;\n            for (let index = len - 1; index >= 0; index--)// 逆序移除 防止移除多个问题\n            {\n                let item = this.showItemList[index];\n                if (deleteNodeUuIdList.indexOf(item.uuid) >= 0)// 在删除列表里，就删除，加到缓存列表中\n                {\n                    this.cachePool.push(item);\n                    this.showItemList.splice(index, 1);\n                }\n            }\n            this.miniIdx = miniIdx; // 更新\n            for (let i = 0; i < this.maxNum; i++) {\n                idx = this.miniIdx + i;\n                if (remainList.indexOf(idx) < 0)// 没有包含的 新实例化的数据，在剩余item中没有的就创建\n                {\n                    this.refreshItem(idx, i);\n                }\n            }\n        }\n    }\n\n    //idx是UI该刷新的第几个元素\n    private refreshItem(idx, objIdx) {\n        if (idx < 0 || idx >= this.dataList.length)\n            return;\n        let obj = this.cachePool.pop();\n        if (obj == null) {\n            console.error(\"obj is null！\");\n            return;\n        }\n\n        let curX = 0;\n        let curY = 0;\n        curY = this.initY - this.itemHeight * idx;\n\n        // console.error(\"idx:\" + idx + \",curX:\" + curX + \",curY:\" + curY);\n        obj.position = v3(curX, curY);\n        obj.active = true;\n        this.onRefresh(obj, objIdx, idx);\n\n        this.showItemList.push(obj);\n        // 这里坐标按照显示从上到下  从大到小的排序 ，因为this.showItemList的都是后面push ,实例化下面数据，可以push，但是实例化上面数据，需要加到最前面，按照位置，\n        // 否则删除的时候根据index  remainList是根据index+lastMinIdx保留的，也就是数据列表的index,实例化上面数据index push到最后，到时候remian中index和实际的数据index不对应\n        this.showItemList.sort((a, b) => {\n            return -a.position.y + b.position.y;\n        })\n    }\n\n    /**\n     * 刷新回调\n     * @param obj \n     * @param idx 需求显示的索引\n     * @param objIdx 实际的item索引\n     */\n    private onRefresh(obj, idx: string, objIdx) {\n        let head = obj.getChildByName(\"head\").getComponent(Sprite);\n        let num = obj.getChildByName(\"num\").getComponent(Label);\n        head.spriteFrame = this.headList[objIdx];\n        num.string = this.dataList[objIdx];\n    }\n\n    // 滑动中\n    onScrolling() {\n        //获取滚动视图相对于左上角原点的当前滚动偏移\n        let scrollOffset: Vec2 = this.scroll.getScrollOffset();\n        this.curOffset = scrollOffset.y;\n        this.refresh();\n    }\n    update(dt) {\n    }\n}\n"]}