{"version":3,"sources":["file:///C:/D-Disk/cocos%20project/ScrollTest/assets/scripts/item3.ts"],"names":["_decorator","Component","EventHandler","Label","ccclass","property","item3","type","tooltip","isShowing","publishOnEnterScrollView","onEnterScorllViewEvents","length","forEach","event","emit","publishOnExitScrollView","onExitScorllViewEvents","setValue","name","desc","nameLabel","string","descLabel"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,K,OAAAA,K;;;;;;;;;OACxC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;uBAGjBM,K,WADZF,OAAO,CAAC,OAAD,C,UAGHC,QAAQ,CAACF,KAAD,C,UAGRE,QAAQ,CAACF,KAAD,C,UAGRE,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAE,CAACL,YAAD,CADA;AAENM,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAE,CAACL,YAAD,CADA;AAENM,QAAAA,OAAO,EAAE;AAFH,OAAD,C,2BAfb,MACaF,KADb,SAC2BL,SAD3B,CACqC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA0BjCQ,SA1BiC,GA0BZ,KA1BY;AAAA;;AA4BjC;AACJ;AACA;AACIC,QAAAA,wBAAwB,GAAG;AACvB,cAAI,KAAKC,uBAAL,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;AAC3C;AACH;;AACD,eAAKD,uBAAL,CAA6BE,OAA7B,CAAqCC,KAAK,IAAI;AAC1CA,YAAAA,KAAK,CAACC,IAAN,CAAW,EAAX;AACH,WAFD;AAGH;AAED;AACJ;AACA;;;AACIC,QAAAA,uBAAuB,GAAG;AACtB,cAAI,KAAKC,sBAAL,CAA4BL,MAA5B,KAAuC,CAA3C,EAA8C;AAC1C;AACH;;AACD,eAAKK,sBAAL,CAA4BJ,OAA5B,CAAoCC,KAAK,IAAI;AACzCA,YAAAA,KAAK,CAACC,IAAN,CAAW,EAAX;AACH,WAFD;AAGH;;AAEMG,QAAAA,QAAQ,CAACC,IAAD,EAAcC,IAAd,EAA0B;AACrC,eAAKC,SAAL,CAAeC,MAAf,GAAsBH,IAAtB;AACA,eAAKI,SAAL,CAAeD,MAAf,GAAsBF,IAAtB;AAEH;;AAxDgC,O;;;;;iBAGjB,I;;;;;;;iBAGA,I;;;;;;;iBAM0B,E;;;;;;;iBAMD,E","sourcesContent":["import { _decorator, Component, EventHandler, Label, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('item3')\nexport class item3 extends Component {\n    \n    @property(Label)\n    nameLabel:Label=null;\n\n    @property(Label)\n    descLabel:Label=null;\n\n    @property({\n        type: [EventHandler],\n        tooltip: \"进入ScrollView时回调\"\n    })\n    onEnterScorllViewEvents: EventHandler[] = [];\n\n    @property({\n        type: [EventHandler],\n        tooltip: \"离开ScrollView时回调\"\n    })\n    onExitScorllViewEvents: EventHandler[] = [];\n\n    /**\n     * 当前是否在展示中\n     *\n     * 1. 在进入和离开ScrollView期间，为true\n     * 2. 在离开ScrollView期间，为false\n     */\n    isShowing: boolean = false;\n\n    /**\n     * Item 进入 ScrollView 的时候回调\n     */\n    publishOnEnterScrollView() {\n        if (this.onEnterScorllViewEvents.length === 0) {\n            return;\n        }\n        this.onEnterScorllViewEvents.forEach(event => {\n            event.emit([]);\n        });\n    }\n\n    /**\n     * Item 离开 ScrollView 的时候回调\n     */\n    publishOnExitScrollView() {\n        if (this.onExitScorllViewEvents.length === 0) {\n            return;\n        }\n        this.onExitScorllViewEvents.forEach(event => {\n            event.emit([]);\n        });\n    }\n\n    public setValue(name:string, desc:string){\n        this.nameLabel.string=name;\n        this.descLabel.string=desc;\n\n    }\n\n\n}\n\n"]}